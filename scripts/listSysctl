#!/bin/bash

declare -A -x arrayKeys;

function getTopLevelKeys() {
	local query;
	query=$( sysctl -N -a | grep -E -i -o '^([a-z]*)\.' | tr -d '.' | sort -u );
    local num=1;
    DEBUG "getTopLevelKeys" "Running sysctl cmd to populate array";
    for topLevelKey in ${query}
    do
				arrayKeys[${num}]="${topLevelKey}";
				# shellcheck disable=SC2181
				[[ $? != 0 ]] && throwEx "listSysctl" "getTopLevelKeys" "Error trying to add the '${topLevelKey}' key to array posistion no. ${num}" 150 0;
				DEBUG "getTopLevelKeys" "${num} ${topLevelKey} added to the array";
:       $((num++));
    done
}

function getUsersSelection() {
    printf "\n${GREEN}%-5s\t${GREEN}%-27s${RESET}\n\r" "${UL}No.${LU}" "${UL}Key${LU}";
    DEBUG "getUsersSelection" "Listing top level keys for user, array count: ${arrayKeys[#]}";
    for key in "${!arrayKeys[@]}"
    do
		    DEBUG "getUsersSelection" "getUsersSelection loop at: ${arrayValue}";
				[[ $(( key % 2 )) -eq 0  ]] && bgc=$( tput setab 237 ) || bgc=$( tput setab 234 )
        printf "${bgc}${WHITE}%-5s\t${WHITE}%-27s${RESET}\n\r" "${key}" "${arrayKeys[${key}]}";
    done
    DEBUG "getUsersSelection" "Request user input to make selection";
		echo -e "\nSelect top level key from the list be entering the relative number: "; read -r userSelectionKeyNumber;

		DEBUG "getUsersSelection" "search for key in array based on user selection number: ${userSelectionKeyNumber}";
		for ber in "${!arrayKeys[@]}"
		do
				[[ ${ber} -eq ${userSelectionKeyNumber} ]] && declare -r -x topKey=${arrayKeys[${ber}]}
		done
		DEBUG "getUsersSelection" "Set key as ${topKey}";
}

# entry point
DEBUG "listSysctl" "Calling function populateArray";
getTopLevelKeys;
getUsersSelection;
#for i in "${!arrayKeys[@]}"
#do
#  echo "key  : $i"
#  echo "value: ${arrayKeys[$i]}"
#done

