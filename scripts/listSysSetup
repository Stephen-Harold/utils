#!/bin/bash

# arguments to be passed to the systemctl to retrieve information
cmdArray=(
	"getdate"\
	"gettime"\
	"gettimezone"\
	"getusingnetworktime"\
	"getnetworktimeserver"\
	"getsleep"\
	"getcomputersleep"\
	"getdisplaysleep"\
	"getharddisksleep"\
	"getwakeonnetworkaccess"\
	"getrestartpowerfailure"\
	"getrestartfreeze"\
	"getallowpowerbuttontosleepcomputer"\
	"getremoteappleevents"\
	"getcomputername"\
	"getlocalsubnetname"\
	"getstartupdisk"\
	"getwaitforstartupafterpowerfailure"\
	"getdisablekeyboardwhenenclosurelockisengaged"\
);

function formatOutput() {
	local num=1;
	printf "\n\r${hdr}%-8s   ${hdr}%-36s\t   ${hdr}%-42s${rst}\n\r" "No.${lu}" "Commands${lu}" "Output${lu}";
	for cmd in "${cmdArray[@]}"
	do
		output=$( systemsetup "-${cmd}" | xargs ); # xargs trims white-space
	 	DEBUG "formatOutput" "variable output has value of ${output}";
		DEBUG "formatOutput" "c has value of ${cmd}";
		case ${cmd} in
			getsleep)
				DEBUG "formatOutput" "case match: no print & DO NOTHING on ||| getsleep |||";
				# SKIP SKIP SKIP SKIP
			;;
			gettime|getdate)
				DEBUG "formatOutput" "case match: custom print & continue on ||| getallowpowerbuttontosleepcomputer |||";
				printf "%-6s${grn}%-36s${rst} ${ylw}%-42s${rst}\n\r" "${num}" "${cmd}" "${output}";
			;;
			getdisablekeyboardwhenenclosurelockisengaged)
				DEBUG "formatOutput" "case match: custom print & continue on ||| getdisablekeyboardwhenenclosurelockisengaged |||";
				printf "%-6s${grn}%-36s${rst}${ylw}%-42s${rst}\n\r" "${num}" "${cmd}" "${output//*:}";
			;;
			*)
				DEBUG "formatOutput" "Case default: ${cmd} ${output//*:}";
				printf "%-6s${grn}%-36s${rst}${ylw}%-42s${rst}\n\r" "${num}." "${cmd}" "${output//*:}";
			;;
	esac
	:	$((num++));
	done

	echo -e "\nUse ${code} sudo systemsetup -<command> ${rst} to see the commands individualy.\n\rDon't forget the '-' tack infront of the command.."
	echo -e "\n\r";
}

formatOutput;
unset -f formatOutput;
unset cmdArray;
